{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "vmArray":{
        "type": "array"
      },
      "dataDiskResources":{
        "type": "array"
      },
      "storageAccountName":{
        "type": "string"
      },
      "virtualNetworkName":{
        "type": "string"
      },
      "environmentConfiguration": {
        "type": "object"
      },
      "virtualNetworkRG":{
        "type": "string"
      },
      "vmTimeZone":{
        "type": "string"
      }
    },
    "variables": {
      "vnetId": "[resourceId(parameters('virtualNetworkRG'),'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]"
      
    },
    "resources": [
      {
        "apiVersion": "2018-08-01",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(parameters('vmArray')[copyIndex()].vmName,'-NIC')]",
        "location": "[resourceGroup().location]",
        "tags": "[parameters('environmentConfiguration').tags.value]",
        "copy": {
          "name": "vNICarray",
          "count": "[length(parameters('vmArray'))]"
        },
        "dependsOn": [
        ],
        "properties": {
          "ipConfigurations": [
            {
              "name": "ipconfig1",
              "properties": {
                "privateIPAllocationMethod": "Static",
                "privateIPAddress": "[parameters('vmArray')[copyIndex()].vmInternalIP]",
                "subnet": {
                  "id": "[concat(variables('vnetId'), '/subnets/', parameters('vmArray')[copyIndex()].vmSubnetName)]"
                }
              }
            }
          ]
        }
      },
      {
        "name": "[concat(parameters('vmArray')[copyIndex()].vmname,'-datadisk',copyIndex('dataDiskResources'))]",
        "type": "Microsoft.Compute/disks",
        "apiVersion": "2018-06-01",
        "location": "[resourceGroup().location]",
        "zones": [
          "[parameters('vmArray')[copyIndex()].vmZone]"
        ],
        "properties": {
            "diskSizeGB": "[parameters('dataDiskResources')[copyIndex()].diskSizeGB]",
            "creationData": "[parameters('dataDiskResources')[copyIndex()].creationData]"
        },
        "sku": {
            "name": "[parameters('dataDiskResources')[copyIndex()].sku]"
        },
        "copy": {
            "name": "managedDiskResources",
            "count": "[length(parameters('vmArray'))]"
        }
      },
      {
        "name": "[parameters('vmArray')[copyIndex()].vmName]",
        "type": "Microsoft.Compute/virtualMachines",
        "apiVersion": "2018-10-01",
        "location": "[resourceGroup().location]",
        "copy": {
          "name": "vmDeploy",
          "count": "[length(parameters('vmArray'))]"
        },
        "zones": [
          "[parameters('vmArray')[copyIndex()].vmZone]"
        ],
        "dependsOn": [
          "vNICarray",
          "managedDiskResources"
        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "[parameters('vmArray')[copyIndex()].vmSize]"
            },
            "storageProfile": {
                "osDisk": {
                    "createOption": "FromImage",
                    "managedDisk": {
                    "storageAccountType": "[parameters('vmArray')[copyIndex()].osDiskType]"
                    }
                },
                "imageReference": {
                  "publisher": "MicrosoftWindowsServer",
                  "offer": "WindowsServer",
                  "sku": "[parameters('vmArray')[copyIndex()].windowsOSVersion]",
                  "version": "latest"
                },
                "copy": [
                    {
                        "name": "dataDisks",
                        "count": "[length(parameters('vmArray')[copyIndex()].datadiskquantity)]",
                        "input": {
                            "lun": "[parameters('dataDiskResources')[copyIndex()].lun]",
                            "createOption": "[parameters('vmArray')[copyIndex('dataDiskResources')].dataDiskResources.createOption]",
                            "caching": "[parameters('vmArray')[copyIndex('dataDiskResources')].caching]",
                            "writeAcceleratorEnabled": "[parameters('vmArray')[copyIndex('dataDiskResources')].dataDiskResources.writeAcceleratorEnabled]",
                            "diskSizeGB": "[parameters('vmArray')[copyIndex('dataDiskResources')].dataDiskResources.diskSizeGB]",
                            "managedDisk": {
                              "id": "",  
                              "id": "[coalesce(parameters('vmArray')[copyIndex('dataDiskResources')].dataDiskResources.id, if(equals(parameters('vmArray')[copyIndex('dataDiskResources')].name, json('null')), json('null'), resourceId('Microsoft.Compute/disks',concat(parameters('vmArray')[copyIndex()].vmname,'-datadisk',copyIndex('dataDiskResources')))))]",
                                "storageAccountType": "[parameters('vmArray')[copyIndex('dataDiskResources')].storageAccountType]"
                            }
                        }
                    }
                ]
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('vmArray')[copyIndex()].vmName,'-NIC'))]"
                    }
                ]
            },
            "osProfile": {
              "computerName": "[parameters('vmArray')[copyIndex()].vmName]",
              "adminUsername": "[parameters('vmArray')[copyIndex()].adminUsername]",
              "adminPassword": "[parameters('vmArray')[copyIndex()].adminPassword]",
              "windowsConfiguration": {
                "timeZone": "[parameters('vmTimeZone')]"
              }
            },
            "diagnosticsProfile": {
                "bootDiagnostics": {
                    "enabled": true,
                    "storageUri": "[concat('https://', parameters('storageAccountName'), '.blob.core.windows.net/')]"
                }
            }
        }
    }
      ],
    "outputs": {
    }
  }